apiVersion: v1
kind: ConfigMap
metadata:
  name: env-configmap
  labels:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: env-configmap
data:
  # STORE_URL: 's3://wbrannon-lsm-data/speechbox/'
  STORE_URL: 'file:///hostdata/'

  LOG_LEVEL: INFO
  POLL_INTERVAL: '10'

  CHUNK_SIZE_SECONDS: '30'
  INGEST_CHUNK_ERROR_THRESHOLD: '-1'
  INGEST_N_TASKS_PER_CONTAINER: '10'

  WHISPER_VERSION: large-v3
  COMPUTE_TYPE: int8
  REMOVE_AUDIO: 'true'
  TRANSCRIBE_CHUNK_ERROR_THRESHOLD: '1'

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: postgres
spec:
  selector:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: postgres
spec:
  accessModes:
    - ReadWriteOncePod
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: audio-scraper
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: audio-scraper
        app.kubernetes.io/component: postgres
    spec:
      restartPolicy: Always
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: output
          hostPath:
            path: /hostdata
            type: Directory
      initContainers:
        - name: volume-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 999:999 /var/lib/postgresql/data']
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: audio-scraper-postgres
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: output
              mountPath: /hostdata
          envFrom:
            - configMapRef:
                name: env-configmap
            - secretRef:
                name: env-secrets
          livenessProbe:
            exec:
              command:
                - pg_isready
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            exec:
              command:
                - pg_isready
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 1000m
              memory: 256Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingest
  labels:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: ingest
spec:
  replicas: 9
  selector:
    matchLabels:
      app.kubernetes.io/name: audio-scraper
      app.kubernetes.io/component: ingest
  template:
    metadata:
      labels:
        app.kubernetes.io/name: audio-scraper
        app.kubernetes.io/component: ingest
    spec:
      restartPolicy: Always
      volumes:
        - name: output
          hostPath:
            path: /hostdata
            type: Directory
      containers:
        - name: ingest
          image: audio-scraper-ingest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: output
              mountPath: /hostdata
          env:
            - name: POSTGRES_HOST
              value: postgres-service
          envFrom:
            - configMapRef:
                name: env-configmap
            - secretRef:
                name: env-secrets
          resources:
            requests:
              cpu: 384m
              memory: 192Mi
            limits:
              cpu: 1000m
              memory: 256Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: transcribe
  labels:
    app.kubernetes.io/name: audio-scraper
    app.kubernetes.io/component: transcribe
spec:
  replicas: 8
  selector:
    matchLabels:
      app.kubernetes.io/name: audio-scraper
      app.kubernetes.io/component: transcribe
  template:
    metadata:
      labels:
        app.kubernetes.io/name: audio-scraper
        app.kubernetes.io/component: transcribe
    spec:
      restartPolicy: Always
      volumes:
        - name: output
          hostPath:
            path: /hostdata
            type: Directory
      containers:
        - name: transcribe
          image: audio-scraper-transcribe
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: output
              mountPath: /hostdata
          env:
            - name: POSTGRES_HOST
              value: postgres-service
          envFrom:
            - configMapRef:
                name: env-configmap
            - secretRef:
                name: env-secrets
          resources:
            requests:
              cpu: 1100m
              memory: 3584Mi
            limits:
              cpu: 2000m
              memory: 5120Mi
              nvidia.com/gpu: 1
